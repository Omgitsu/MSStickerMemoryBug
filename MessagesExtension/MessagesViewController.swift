//
//  MessagesViewController.swift
//  MessagesExtension
//
//  Created by James Baker on 8/2/17.
//  Copyright Â© 2017 WDDG. All rights reserved.
//

import UIKit
import Messages

class MessagesViewController: MSMessagesAppViewController {
    
    @IBOutlet weak var stickerView: MFStickerView!
    @IBOutlet weak var deleteButton: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view.
        loadSticker()
    }
    
    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }
    
    // MARK: - Conversation Handling
    
    override func willBecomeActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the inactive to active state.
        // This will happen when the extension is about to present UI.
        
        // Use this method to configure the extension and restore previously stored state.
    }
    
    override func didResignActive(with conversation: MSConversation) {
        // Called when the extension is about to move from the active to inactive state.
        // This will happen when the user dissmises the extension, changes to a different
        // conversation or quits Messages.
        
        // Use this method to release shared resources, save user data, invalidate timers,
        // and store enough state information to restore your extension to its current state
        // in case it is terminated later.
    }
   
    override func didReceive(_ message: MSMessage, conversation: MSConversation) {
        // Called when a message arrives that was generated by another instance of this
        // extension on a remote device.
        
        // Use this method to trigger UI updates in response to the message.
    }
    
    override func didStartSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user taps the send button.
    }
    
    override func didCancelSending(_ message: MSMessage, conversation: MSConversation) {
        // Called when the user deletes the message without sending it.
    
        // Use this to clean up state related to the deleted message.
    }
    
    override func willTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called before the extension transitions to a new presentation style.
    
        // Use this method to prepare for the change in presentation style.
    }
    
    override func didTransition(to presentationStyle: MSMessagesAppPresentationStyle) {
        // Called after the extension transitions to a new presentation style.
    
        // Use this method to finalize any behaviors associated with the change in presentation style.
    }
    // MARK: - IBActions
    @IBAction func deleteButtonPressed(_ sender: Any) {
        removeSticker()
    }
    
    // MARK: - Methods
    
    func loadSticker() {
        let image = Bundle.main.path(forResource: "elephant@3x", ofType: "png")
        let url = URL.init(fileURLWithPath: image!)
        do {
            self.stickerView.sticker = nil
            let sticker = try MFSticker.init(contentsOfFileURL: url, localizedDescription: "")
            self.stickerView.sticker = sticker
            self.stickerView.startAnimating()
        } catch let error as NSError {
            print(error.localizedDescription)
        }
    }
    
    // this should remove the sticker, but it will reside in memory forever
    func removeSticker() {
        self.stickerView.sticker = nil
        self.stickerView.removeFromSuperview()
        self.stickerView = nil
    }

}
